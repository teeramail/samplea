# Since the ".env" file is gitignored, you can use the ".env.example" file to
# build a new ".env" file when you clone the repo. Keep this file up-to-date
# when you add new variables to `.env`.

# This file will be committed to version control, so make sure not to have any
# secrets in it. If you are cloning this repo, create a copy of this file named
# ".env" and populate it with your secrets.

# When adding additional environment variables, the schema in "/src/env.js"
# should be updated accordingly.

# Next Auth
# You can generate a new secret on the command line with:
# npx auth secret
# https://next-auth.js.org/configuration/options#secret
AUTH_SECRET=""

# Next Auth Discord Provider
AUTH_DISCORD_ID=""
AUTH_DISCORD_SECRET=""

# Drizzle
DATABASE_URL="postgresql://postgres:password@localhost:5432/teeone"

# DigitalOcean Spaces configuration
# Create a Space in your DigitalOcean account and generate API keys
# https://docs.digitalocean.com/products/spaces/how-to/create/
# https://docs.digitalocean.com/reference/api/spaces-api/
AWS_ACCESS_KEY_ID="muaythai"
AWS_SECRET_ACCESS_KEY="DO00Y9PDFARL6FPFVJDU"
AWS_S3_BUCKET="teerabucketone"
AWS_REGION="sgp1"
# Important: This should be the base region endpoint, not your full bucket URL
AWS_ENDPOINT="https://sgp1.digitaloceanspaces.com"

# ChillPay Payment Gateway Configuration
# ChillPay is used for Credit Card payments in this application
# To set up, you need to create an account at https://www.chillpay.com/ and get your merchant credentials
# For testing, use the sandbox endpoint. For production, switch to the production endpoint.
CHILLPAY_MERCHANT_CODE="XXXX" # Your ChillPay merchant code
CHILLPAY_API_KEY="XXXX" # Your ChillPay API key
CHILLPAY_MD5_SECRET="XXXX" # Your ChillPay MD5 secret for checksum
CHILLPAY_API_ENDPOINT_SANDBOX="https://sandbox-appsrv2.chillpay.co/api/v2/Payment/" # Sandbox endpoint
CHILLPAY_API_ENDPOINT_PRODUCTION="https://appsrv.chillpay.co/api/v2/Payment/" # Production endpoint
